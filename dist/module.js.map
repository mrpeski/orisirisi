{"mappings":";;;;;ACEO,MAAM,2CAAW,CAAC;IACrB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,YAAI,EAAE,QAAQ,CAAC,MAAM,eAAe;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,YAAI,EAAE,QAAQ,CAAC;IAEvC,MAAM,gBAAgB,CAAA,GAAA,YAAI,EAAE,WAAW,CACnC,CAAC;QACG,EAAE,cAAc;QAChB,MAAM,SAAc,EAAE,MAAM;QAC5B,IAAI,QAAQ,CAAC,OAAO,SAAS,CAAC,QAAQ,CAAC,WACnC,QAAQ;IAEhB,GACA;QAAC;KAAK;IAGV,CAAA,GAAA,YAAI,EAAE,SAAS,CAAC;QACZ,SAAS,gBAAgB,CAAC,SAAS;QACnC,OAAO;YACH,SAAS,mBAAmB,CAAC,SAAS;QAC1C;IACJ,GAAG;QAAC;KAAc;IAElB,IAAI,CAAC,MAAM,IAAI,EAAE,OAAO;IAExB,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;QAChB,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC;QAChC,QAAQ;QACR,IAAI,OAAO,UAAU,MAAM,QAAQ,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC;IAC9D;IACA,MAAM,aAAa,CAAC;QAChB,EAAE,cAAc;QAChB,QAAQ,CAAC;IACb;IACA,qBACI,iBAAC;QAAQ,WAAW;;0BAChB,gBAAC;gBACG,SAAS;gBACT,WAAW;oBAAC;oBAAU;iBAAS,CAAC,IAAI,CAAC;0BAEpC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,SAAS;;0BAEpD,gBAAC;gBAAG,WAAW;oBAAC;oBAAM,OAAO,SAAS;iBAAO,CAAC,IAAI,CAAC;0BAC9C,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,qBACb,gBAAC;kCACG,cAAA,gBAAC;4BACG,SAAS;4BACT,WAAW;gCACP;gCACA,KAAK,EAAE,KAAK,SAAS,WAAW;6BACnC,CAAC,IAAI,CAAC;4BACP,WAAS,KAAK,EAAE;sCAEf,KAAK,KAAK,IAAI,KAAK,EAAE;;uBATrB,KAAK,EAAE;;;;AAgBpC;IAEA,2CAAe","sources":["src/index.ts","src/components/Dropdown.tsx"],"sourcesContent":["export { Dropdown } from \"./components/Dropdown\";","import React from 'react'\n\nexport const Dropdown = (props) => {\n    const [active, setActive] = React.useState(props.defaultSelected)\n    const [show, setShow] = React.useState(false)\n\n    const closeDropdown = React.useCallback(\n        (e: MouseEvent) => {\n            e.preventDefault()\n            const target: any = e.target\n            if (show && !target.classList.contains(\"button\")) {\n                setShow(false)\n            }\n        },\n        [show],\n    )\n\n    React.useEffect(() => {\n        document.addEventListener('click', closeDropdown)\n        return () => {\n            document.removeEventListener('click', closeDropdown)\n        }\n    }, [closeDropdown])\n\n    if (!props.list) return null\n\n    const handleSelect = (e) => {\n        e.preventDefault()\n        setActive(e.target.getAttribute('data-id'))\n        setShow(false)\n        if (props?.onSelect) props.onSelect(e.target.getAttribute('data-id'))\n    }\n    const toggleShow = (e) => {\n        e.preventDefault()\n        setShow(!show)\n    }\n    return (\n        <article className={\"wrapper\"}>\n            <button\n                onClick={toggleShow}\n                className={[\"button\", \"active\"].join(' ')}\n            >\n                {props.list.find((item) => item.id === active)?.label}\n            </button>\n            <ul className={[\"ul\", show ? \"show\" : \"hide\"].join(' ')}>\n                {props.list.map((item) => (\n                    <li key={item.id}>\n                        <button\n                            onClick={handleSelect}\n                            className={[\n                                \"button\",\n                                item.id === active ? \"active\" : '',\n                            ].join(' ')}\n                            data-id={item.id}\n                        >\n                            {item.label || item.id}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </article>\n    )\n}\n\nexport default Dropdown\n"],"names":[],"version":3,"file":"module.js.map"}