{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AEAA,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA;AALA,4CAA2B,CAAC,aAAa,CAAC;AAC1C,4CAA2B,CAAC,aAAa,CAAC;AAC1C,4CAAyB,CAAC,WAAW,CAAC;AACtC,4CAAyB,CAAC,WAAW,CAAC;AACtC,4CAAuB,CAAC,SAAS,CAAC;AAClC,4CAA4B,CAAC,cAAc,CAAC;;;ADFrC,MAAM,2CAAW,CAAC;IACrB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,sCAAI,EAAE,QAAQ,CAAC,MAAM,eAAe;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,sCAAI,EAAE,QAAQ,CAAC;IAEvC,MAAM,gBAAgB,CAAA,GAAA,sCAAI,EAAE,WAAW,CACnC,CAAC;QACG,EAAE,cAAc;QAChB,MAAM,SAAc,EAAE,MAAM;QAC5B,IAAI,QAAQ,CAAC,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAA,GAAA,gEAAK,EAAE,MAAM,GAChD,QAAQ;IAEhB,GACA;QAAC;KAAK;IAGV,CAAA,GAAA,sCAAI,EAAE,SAAS,CAAC;QACZ,SAAS,gBAAgB,CAAC,SAAS;QACnC,OAAO;YACH,SAAS,mBAAmB,CAAC,SAAS;QAC1C;IACJ,GAAG;QAAC;KAAc;IAElB,IAAI,CAAC,MAAM,IAAI,EAAE,OAAO;IAExB,MAAM,eAAe,CAAC;QAClB,EAAE,cAAc;QAChB,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC;QAChC,QAAQ;QACR,IAAI,OAAO,UAAU,MAAM,QAAQ,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC;IAC9D;IACA,MAAM,aAAa,CAAC;QAChB,EAAE,cAAc;QAChB,QAAQ,CAAC;IACb;IACA,qBACI,iCAAC;QAAQ,WAAW,CAAA,GAAA,gEAAK,EAAE,OAAO;;0BAC9B,gCAAC;gBACG,SAAS;gBACT,WAAW;oBAAC,CAAA,GAAA,gEAAK,EAAE,MAAM;oBAAE,CAAA,GAAA,gEAAK,EAAE,MAAM;iBAAC,CAAC,IAAI,CAAC;0BAE9C,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,SAAS;;0BAEpD,gCAAC;gBAAG,WAAW;oBAAC,CAAA,GAAA,gEAAK,EAAE,EAAE;oBAAE,OAAO,CAAA,GAAA,gEAAK,EAAE,IAAI,GAAG,CAAA,GAAA,gEAAK,EAAE,IAAI;iBAAC,CAAC,IAAI,CAAC;0BAC7D,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,qBACb,gCAAC;kCACG,cAAA,gCAAC;4BACG,SAAS;4BACT,WAAW;gCACP,CAAA,GAAA,gEAAK,EAAE,MAAM;gCACb,KAAK,EAAE,KAAK,SAAS,CAAA,GAAA,gEAAK,EAAE,MAAM,GAAG;6BACxC,CAAC,IAAI,CAAC;4BACP,WAAS,KAAK,EAAE;sCAEf,KAAK,KAAK,IAAI,KAAK,EAAE;;uBATrB,KAAK,EAAE;;;;AAgBpC;IAEA,2CAAe","sources":["src/index.ts","src/components/Dropdown.tsx","src/styles/Dropdown.module.css"],"sourcesContent":["export { Dropdown } from \"./components/Dropdown\";","import React from 'react'\nimport styles from '../styles/Dropdown.module.css'\n\nexport const Dropdown = (props) => {\n    const [active, setActive] = React.useState(props.defaultSelected)\n    const [show, setShow] = React.useState(false)\n\n    const closeDropdown = React.useCallback(\n        (e: MouseEvent) => {\n            e.preventDefault()\n            const target: any = e.target\n            if (show && !target.classList.contains(styles.button)) {\n                setShow(false)\n            }\n        },\n        [show],\n    )\n\n    React.useEffect(() => {\n        document.addEventListener('click', closeDropdown)\n        return () => {\n            document.removeEventListener('click', closeDropdown)\n        }\n    }, [closeDropdown])\n\n    if (!props.list) return null\n\n    const handleSelect = (e) => {\n        e.preventDefault()\n        setActive(e.target.getAttribute('data-id'))\n        setShow(false)\n        if (props?.onSelect) props.onSelect(e.target.getAttribute('data-id'))\n    }\n    const toggleShow = (e) => {\n        e.preventDefault()\n        setShow(!show)\n    }\n    return (\n        <article className={styles.wrapper}>\n            <button\n                onClick={toggleShow}\n                className={[styles.button, styles.active].join(' ')}\n            >\n                {props.list.find((item) => item.id === active)?.label}\n            </button>\n            <ul className={[styles.ul, show ? styles.show : styles.hide].join(' ')}>\n                {props.list.map((item) => (\n                    <li key={item.id}>\n                        <button\n                            onClick={handleSelect}\n                            className={[\n                                styles.button,\n                                item.id === active ? styles.active : '',\n                            ].join(' ')}\n                            data-id={item.id}\n                        >\n                            {item.label || item.id}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </article>\n    )\n}\n\nexport default Dropdown\n",".wrapper {\n    position: relative;\n}\n.ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    position: absolute;\n    left: 0;\n    top: 0;\n    min-width: 250px;\n    box-shadow: 0px 4px 12px 0px rgba(0, 0, 0, 0.03);\n    border: 1px solid white\n}\n\n.show {\n    display: block;\n}\n.hide {\n    display: none;\n}\n.button {\n    padding: calc(.55rem + 1px) calc(1.25rem + 1px);\n    outline: none;\n    border: none;\n    width: 100%;\n    text-align: left;\n    background: white;\n}\n.button:hover {\n    background: whitesmoke;\n}\n\n.active {\n    background: whitesmoke;\n    font-weight: bold;\n}\n"],"names":[],"version":3,"file":"main.js.map"}